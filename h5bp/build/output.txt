Buildfile: c:\home\github\gh-pages\Stitches\h5bp\build\build.xml

build:
     [echo] Building a Production Environment...

-rev:
     [echo] =====================================================================
     [echo] Welcome to the HTML5 Boilerplate Build Script!
     [echo]  
     [echo] We're going to get your site all ship-shape and ready for prime time.
     [echo]  
     [echo] This should take somewhere between 15 seconds and a few minutes,
     [echo] mostly depending on how many images we're going to compress.
     [echo]  
     [echo] Feel free to come back or stay here and follow along.
     [echo] =====================================================================
     [echo]  
     [echo]  

-mkdirs:
     [echo] Creating directory structure... publish

-js.all.minify:
     [echo] Minifying scripts

-js.main.concat:
     [echo] Concatenating Main JS scripts...

-js.mylibs.concat:
     [echo] Concatenating JS libraries

-js.scripts.concat:
     [echo] Concatenating library file with main script file

-css:
     [echo] Concatenating any @imports...
     [copy] Copying 1 file to c:\home\github\gh-pages\Stitches\h5bp\intermediate\css
     [echo] Minifying css...
     [copy] Copying 1 file to c:\home\github\gh-pages\Stitches\h5bp\publish\css
     [echo] Minifying any unconcatenated css files...

-usemin:
     [echo] Switching to minified js files...
     [copy] Copying 1 file to c:\home\github\gh-pages\Stitches\h5bp\intermediate
     [echo] Kill off those versioning flags: ?v=2
     [echo] Remove favicon.ico reference if it is pointing to the root
     [echo] Update the HTML to reference our concatenated script file: js/32ddddb4393fe69a3cdc1a1a5e8ec0a76a9d969e.js
     [echo] Updating the HTML with the new css filename: css/c70b91cbc82d61ccb1c71501262384a50287c5a3.css

-manifest:
     [echo] no manifest.appcache generated!

-htmlclean:
     [echo] Run htmlcompressor on the HTML
     [echo]  - maintaining whitespace
     [echo]  - removing html comments
     [echo]  - compressing inline style/script tag contents

-imagespng:
     [echo] Optimizing images...
     [echo] This part might take a while. But everything else is already done.
     [echo]  
     [echo] First, we run optipng on the .png files...

-imagesjpg:
     [echo] Now, we clean up those jpgs...

-copy:
     [echo] Copying over new files...
     [echo] A copy of all non-dev files are now in: ./publish.

-build.production:

BUILD SUCCESSFUL
Total time: 3 seconds
